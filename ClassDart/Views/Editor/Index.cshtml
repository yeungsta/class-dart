@model ClassDart.Models.EditorViewModel
           
@{
    ViewBag.Title = "Editor";
    string tempId;
    string tempId1;
    string tempId2;
    string tempId3;
    string tempId4;
    string tempId5;
    string lastDate = string.Empty;
}


<div data-role="page" id="announcements" class="bodyBg">
	<div data-role="header">        
        <div data-role="navbar" class="headerBar">
         <center>
          <h2>
           @Model.classObj.Name
          </h2>
         </center>
        </div>

		<div data-role="navbar" class="ui-state-persist" data-iconpos="bottom" data-position="fixed">
		    <ul>
			<li><a href="#announcements" data-icon="grid" data-transition="none" class="ui-state-persist ui-btn-active">@Model.AnnouncementsLbl</a></li>
			<li><a href="#assignments" data-icon="star" data-transition="none">@Model.AssignmentsLbl</a></li>
			<li><a href="#instructor" data-icon="home" data-transition="none">@Model.InstructorLbl</a></li>
		    </ul>
		</div><!-- /navbar -->		
	</div><!-- /header -->

	<div data-role="content">
        <center>
        <a href="#popupCreateAnnouncement" data-rel="dialog" data-role="button" data-inline="true" data-icon="plus" data-theme="f" data-transition="none">New Announcement</a>
        </center>
		<ul data-role="listview" data-inset="true" data-theme="c">
            @for (int i = Model.announcements.Count - 1; i >= 0; i--)
            {
                tempId = "#announcement" + i;
                if (lastDate != Model.announcements[i].UpdateDateTime.ToString("dddd, MMMM dd, yyyy"))
                {
                    lastDate = Model.announcements[i].UpdateDateTime.ToString("dddd, MMMM dd, yyyy");
		            <li data-role="list-divider">@lastDate</li>
                }
		        <li><a href="@tempId" data-transition="slide">
                <h2>@Model.announcements[i].Text</h2>
			    <p><strong>@Model.announcements[i].UpdateDateTime.ToString("h:mm tt")</strong></p>
			    <!-- <p class="ui-li-aside"><strong>@Model.announcements[i].UpdateDateTime.ToString("h:mm tt")</strong></p> -->
		        </a></li>
            }
		</ul>
        <br />
	</div><!-- /content -->

    @Html.Partial("_EditorFooter")

</div><!-- /page -->

<div data-role="page" id="popupCreateAnnouncement" data-overlay-theme="a" data-theme="c">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>Create</h1>
	</div>

    <div data-role="content" data-theme="b">
    @Html.ValidationSummary(true, "Create was unsuccessful. Please correct the errors and try again.")
    @using (Html.BeginForm())
    {
        <div style="padding:10px 20px;">
            <fieldset>
                <div class="editor-field">
                    @Html.TextAreaFor(m => m.AnnouncementField, new { data_theme = "c", placeholder = "Text..." })
                    @Html.ValidationMessageFor(m => m.AnnouncementField)
                </div>
                <!--todo
                <br />
                <a href="" data-role="button" data-icon="plus" data-theme="a">Link Dropbox File</a>
                -->
                <p>
                    <input type="submit" value="Create Announcement" name="submitButton" data-theme="b" data-icon="check" />
                </p>
            </fieldset>
        </div>
    }
    </div>
</div>

<div data-role="page" id="assignments" class="bodyBg">
	<div data-role="header">
        <div data-role="navbar" class="headerBar">
          <center>
          <h2>
           @Model.classObj.Name
          </h2>
         </center>
        </div>

		<div data-role="navbar" class="ui-state-persist" data-iconpos="bottom">
		    <ul>
			<li><a href="#announcements" data-icon="grid" data-transition="none">@Model.AnnouncementsLbl</a></li>
			<li><a href="#assignments" data-icon="star" data-transition="none" class="ui-state-persist ui-btn-active">@Model.AssignmentsLbl</a></li>
			<li><a href="#instructor" data-icon="home" data-transition="none">@Model.InstructorLbl</a></li>
		    </ul>
		</div><!-- /navbar -->		
	</div><!-- /header -->
		
	<div data-role="content">
        @for (int i = 0; i < Model.assignments.Count; i++)
        {
            tempId4 = "#DeleteAssignWarning" + i;
         
		    <div data-role="collapsible" data-theme="b" data-content-theme="c">
		        <h2>@Model.assignments[i].Title</h2>
		        <p>@Html.Raw(ClassDart.Controllers.Utilities.Linkify(Model.assignments[i].Text))</p>
                <p>
                    <a href="@tempId4" data-rel="dialog" data-role="button" data-inline="true" data-icon="delete" data-theme="b" data-transition="none">Delete Assignment</a>
                </p>
		    </div>
		    <br/>           
        }

        <center>
        <a href="#popupCreateAssignment" data-rel="dialog" data-role="button" data-inline="true" data-icon="plus" data-theme="f" data-transition="none">New Assignment</a>
        </center>
        <br />
	</div><!-- /content -->

    @Html.Partial("_EditorFooter")

</div><!-- /page -->

<!-- create delete assignment warnings -->
@for (int i = 0; i < Model.assignments.Count; i++)
{
    tempId5 = "DeleteAssignWarning" + i;
     
 	<div data-role="page" id="@tempId5" data-overlay-theme="a" data-theme="c">
		<div data-role="header" data-theme="a" class="ui-corner-top">
			<h1>Delete</h1>
		</div>
		<div data-role="content" data-theme="b">
			<h3 class="ui-title">Are you sure you want to delete the assignment?</h3>
			<p>This action cannot be undone.</p>
            <a href="#" data-role="button" data-icon="delete" data-theme="a" data-rel="back">Cancel</a>
            <a data-role="button" data-icon="check" data-theme="b"  href="@Url.Action("DeleteAssignmentConfirmed", "Editor", new { id = Model.classObj.ID, index = i }, null)">Delete</a>
		</div>
	</div> 
}

<div data-role="page" id="popupCreateAssignment" data-overlay-theme="a" data-theme="c">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>Create</h1>
	</div>

    <div data-role="content" data-theme="b">
        @Html.ValidationSummary(true, "Create was unsuccessful. Please correct the errors and try again.")
        @using (Html.BeginForm())
        {
            <div style="padding:10px 20px;">
                <fieldset>
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.AssignmentTitleField, new { data_theme = "c", placeholder = "Title" })
                        @Html.ValidationMessageFor(m => m.AssignmentTitleField)
                    </div>
                    <br />
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.AssignmentTextField, new { data_theme = "c", placeholder = "Text" })
                        @Html.ValidationMessageFor(m => m.AssignmentTextField)
                    </div>
                    <!--todo
                    <br />
                    <a href="" data-role="button" data-icon="plus" data-theme="a">Link Dropbox File</a>
                    -->
                    <p>
                        <input type="submit" value="Create Assignment" name="submitButton" data-theme="b" data-icon="check" />
                    </p>
                </fieldset>
            </div>
        }
    </div>
</div>

<div data-role="page" id="instructor" class="bodyBg">
	<div data-role="header">
        <div data-role="navbar" class="headerBar">
            <center>
            <h2>
            @Model.classObj.Name
            </h2>
            </center>
        </div>

		<div data-role="navbar" class="ui-state-persist" data-iconpos="bottom">
		    <ul>
			<li><a href="#announcements" data-icon="grid" data-transition="none">@Model.AnnouncementsLbl</a></li>
			<li><a href="#assignments" data-icon="star" data-transition="none">@Model.AssignmentsLbl</a></li>
			<li><a href="#instructor" data-icon="home" data-transition="none" class="ui-state-persist ui-btn-active">@Model.InstructorLbl</a></li>
		    </ul>
		</div><!-- /navbar -->
	</div><!-- /header -->
		
	<div data-role="content">
		<center>
		<h3>@Model.instructorObj.Prefix @Model.instructorObj.FirstName @Model.instructorObj.MiddleInitial @Model.instructorObj.LastName</h3>
        <p>
        @Html.Raw(ClassDart.Controllers.Utilities.Linkify(Model.instructorObj.Bio))
		</center>
		<br>
        <center>
        @if (!string.IsNullOrEmpty(Model.instructorObj.Email))
        {
		    <a href="mailto:@Model.instructorObj.Email" data-role="button" data-icon="email" data-theme="b" data-inline="true">Email</a>
        }        
        @if (!string.IsNullOrEmpty(Model.instructorObj.Phone))
        {
		    <a href="tel:@Model.instructorObj.Phone" data-role="button" data-icon="phone" data-theme="b" data-inline="true">Phone</a>
        }
        @if (!string.IsNullOrEmpty(Model.instructorObj.Facebook))
        {
		    <a href="http://@Model.instructorObj.Facebook" data-role="button" data-icon="facebook" data-theme="b" data-inline="true">Facebook</a>
        }        
        @if (!string.IsNullOrEmpty(Model.instructorObj.LinkedIn))
        {
		    <a href="http://@Model.instructorObj.LinkedIn" data-role="button" data-icon="linkedin" data-theme="b" data-inline="true">LinkedIn</a>
        }		
        @if (!string.IsNullOrEmpty(Model.instructorObj.Twitter))
        {
		    <a href="http://www.twitter.com/@Model.instructorObj.Twitter" data-role="button" data-icon="twitter" data-theme="b" data-inline="true">Twitter</a>
        }		
        @if (!string.IsNullOrEmpty(Model.instructorObj.Website))
        {
		    <a href="http://@Model.instructorObj.Website" data-role="button" data-icon="monitor" data-theme="b" data-inline="true">Website</a>
        }
        <br />
        <a href="#popupEditInstructor" data-rel="dialog" data-role="button" data-inline="true" data-icon="add" data-theme="f" data-transition="none">Edit</a>
        </center>
        <br />
	</div><!-- /content -->

    @Html.Partial("_EditorFooter")

</div><!-- /page -->

<!-- Instructor Edit Popup -->
<div data-role="page" id="popupEditInstructor" data-overlay-theme="a" data-theme="c">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>Edit</h1>
	</div>

    <div data-role="content" data-theme="b">
		<ul data-role="listview" data-inset="true" data-theme="c">
            <li><a href="#editName" data-rel="dialog" data-transition="none">Name</a></li>
            <li><a href="#editBio" data-rel="dialog" data-transition="none">Bio</a></li>
            <li><a href="#editEmail" data-rel="dialog" data-transition="none">Email</a></li>
            <li><a href="#editPhone" data-rel="dialog" data-transition="none">Phone</a></li>
            <li><a href="#editFacebook" data-rel="dialog" data-transition="none">Facebook</a></li>
            <li><a href="#editLinkedIn" data-rel="dialog" data-transition="none">LinkedIn</a></li>
            <li><a href="#editTwitter" data-rel="dialog" data-transition="none">Twitter</a></li>
            <li><a href="#editWebsite" data-rel="dialog" data-transition="none">Website</a></li>
		</ul>
    </div>
</div>

<!-- Instructor Edit Pages Below -->
<div data-role="page" id="editName" data-theme="a">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>Edit Name</h1>
	</div>

    <div data-role="content" data-theme="b">
        @Html.ValidationSummary(true, "Edit was unsuccessful. Please correct the errors and try again.")
        @using (Html.BeginForm())
        {
            <div style="padding:10px 20px;">
                <fieldset>
                    @Html.HiddenFor(m => m.classObj.Name)

                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.instructorObj.Prefix, new { data_theme = "c", placeholder = "Salutation" })
                        @Html.ValidationMessageFor(m => m.instructorObj.Prefix)
                    </div>
                    <br />
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.instructorObj.FirstName, new { data_theme = "c", placeholder = "First Name" })
                        @Html.ValidationMessageFor(m => m.instructorObj.FirstName)
                    </div>
                    <br />
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.instructorObj.MiddleInitial, new { data_theme = "c", placeholder = "Middle Initial" })
                        @Html.ValidationMessageFor(m => m.instructorObj.MiddleInitial)
                    </div>
                    <br />
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.instructorObj.LastName, new { data_theme = "c", placeholder = "Last Name" })
                        @Html.ValidationMessageFor(m => m.instructorObj.LastName)
                    </div>

                    <br />
                    <a href="#" data-role="button" data-icon="delete" data-theme="a" data-rel="back">Cancel</a>
                    <p>
                        <input type="submit" value="Save Name" name="submitButton" data-theme="b" data-icon="check" />
                    </p>
                </fieldset>
            </div>
        }
    </div>
</div>

<div data-role="page" id="editBio" data-theme="a">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>Edit Bio</h1>
	</div>

    <div data-role="content" data-theme="b">
        @Html.ValidationSummary(true, "Edit was unsuccessful. Please correct the errors and try again.")
        @using (Html.BeginForm())
        {
            <div style="padding:10px 20px;">
                <fieldset>
                    @Html.HiddenFor(m => m.classObj.Name)
                    @Html.HiddenFor(m => m.instructorObj.FirstName)
                    @Html.HiddenFor(m => m.instructorObj.LastName)
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.instructorObj.Bio, new { data_theme = "c", placeholder = "Short Biography" })
                        @Html.ValidationMessageFor(m => m.instructorObj.Bio)
                    </div>

                    <br />
                    <a href="#" data-role="button" data-icon="delete" data-theme="a" data-rel="back">Cancel</a>
                    <p>
                        <input type="submit" value="Save Bio" name="submitButton" data-theme="b" data-icon="check" />
                    </p>
                </fieldset>
            </div>
        }
    </div>
</div>

<div data-role="page" id="editEmail" data-theme="a">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>Edit Email</h1>
	</div>

    <div data-role="content" data-theme="b">
        @Html.ValidationSummary(true, "Edit was unsuccessful. Please correct the errors and try again.")
        @using (Html.BeginForm())
        {
            <div style="padding:10px 20px;">
                <fieldset>
                    @Html.HiddenFor(m => m.classObj.Name)
                    @Html.HiddenFor(m => m.instructorObj.FirstName)
                    @Html.HiddenFor(m => m.instructorObj.LastName)
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.instructorObj.Email, new { data_theme = "c", placeholder = "Public Email" })
                        @Html.ValidationMessageFor(m => m.instructorObj.Email)
                    </div>

                    <br />
                    <a href="#" data-role="button" data-icon="delete" data-theme="a" data-rel="back">Cancel</a>
                    <p>
                        <input type="submit" value="Save Email" name="submitButton" data-theme="b" data-icon="check" />
                    </p>
                </fieldset>
            </div>
        }
    </div>
</div>

<div data-role="page" id="editPhone" data-theme="a">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>Edit Phone</h1>
	</div>

    <div data-role="content" data-theme="b">
        @Html.ValidationSummary(true, "Edit was unsuccessful. Please correct the errors and try again.")
        @using (Html.BeginForm())
        {
            <div style="padding:10px 20px;">
                <fieldset>
                    @Html.HiddenFor(m => m.classObj.Name)
                    @Html.HiddenFor(m => m.instructorObj.FirstName)
                    @Html.HiddenFor(m => m.instructorObj.LastName)
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.instructorObj.Phone, new { data_theme = "c", placeholder = "Phone" })
                        @Html.ValidationMessageFor(m => m.instructorObj.Phone)
                    </div>

                    <br />
                    <a href="#" data-role="button" data-icon="delete" data-theme="a" data-rel="back">Cancel</a>
                    <p>
                        <input type="submit" value="Save Phone" name="submitButton" data-theme="b" data-icon="check" />
                    </p>
                </fieldset>
            </div>
        }
    </div>
</div>

<div data-role="page" id="editFacebook" data-theme="a">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>Edit Facebook</h1>
	</div>

    <div data-role="content" data-theme="b">
        @Html.ValidationSummary(true, "Edit was unsuccessful. Please correct the errors and try again.")
        @using (Html.BeginForm())
        {
            <div style="padding:10px 20px;">
                <fieldset>
                    @Html.HiddenFor(m => m.classObj.Name)
                    @Html.HiddenFor(m => m.instructorObj.FirstName)
                    @Html.HiddenFor(m => m.instructorObj.LastName)
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.instructorObj.Facebook, new { data_theme = "c", placeholder = "Facebook URL" })
                        @Html.ValidationMessageFor(m => m.instructorObj.Facebook)
                    </div>

                    <br />
                    <a href="#" data-role="button" data-icon="delete" data-theme="a" data-rel="back">Cancel</a>
                    <p>
                        <input type="submit" value="Save Facebook" name="submitButton" data-theme="b" data-icon="check" />
                    </p>
                </fieldset>
            </div>
        }
    </div>
</div>
        
<div data-role="page" id="editLinkedIn" data-theme="a">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>Edit LinkedIn</h1>
	</div>

    <div data-role="content" data-theme="b">
        @Html.ValidationSummary(true, "Edit was unsuccessful. Please correct the errors and try again.")
        @using (Html.BeginForm())
        {
            <div style="padding:10px 20px;">
                <fieldset>
                    @Html.HiddenFor(m => m.classObj.Name)
                    @Html.HiddenFor(m => m.instructorObj.FirstName)
                    @Html.HiddenFor(m => m.instructorObj.LastName)
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.instructorObj.LinkedIn, new { data_theme = "c", placeholder = "LinkedIn URL" })
                        @Html.ValidationMessageFor(m => m.instructorObj.LinkedIn)
                    </div>

                    <br />
                    <a href="#" data-role="button" data-icon="delete" data-theme="a" data-rel="back">Cancel</a>
                    <p>
                        <input type="submit" value="Save LinkedIn" name="submitButton" data-theme="b" data-icon="check" />
                    </p>
                </fieldset>
            </div>
        }
    </div>
</div>

<div data-role="page" id="editTwitter" data-theme="a">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>Edit Twitter</h1>
	</div>

    <div data-role="content" data-theme="b">
        @Html.ValidationSummary(true, "Edit was unsuccessful. Please correct the errors and try again.")
        @using (Html.BeginForm())
        {
            <div style="padding:10px 20px;">
                <fieldset>
                    @Html.HiddenFor(m => m.classObj.Name)
                    @Html.HiddenFor(m => m.instructorObj.FirstName)
                    @Html.HiddenFor(m => m.instructorObj.LastName)
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.instructorObj.Twitter, new { data_theme = "c", placeholder = "@" })
                        @Html.ValidationMessageFor(m => m.instructorObj.Twitter)
                    </div>

                    <br />
                    <a href="#" data-role="button" data-icon="delete" data-theme="a" data-rel="back">Cancel</a>
                    <p>
                        <input type="submit" value="Save Twitter" name="submitButton" data-theme="b" data-icon="check" />
                    </p>
                </fieldset>
            </div>
        }
    </div>
</div>
        
<div data-role="page" id="editWebsite" data-theme="a">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>Edit Website</h1>
	</div>

    <div data-role="content" data-theme="b">
        @Html.ValidationSummary(true, "Edit was unsuccessful. Please correct the errors and try again.")
        @using (Html.BeginForm())
        {
            <div style="padding:10px 20px;">
                <fieldset>
                    @Html.HiddenFor(m => m.classObj.Name)
                    @Html.HiddenFor(m => m.instructorObj.FirstName)
                    @Html.HiddenFor(m => m.instructorObj.LastName)
                    <div class="editor-field">
                        @Html.TextAreaFor(m => m.instructorObj.Website, new { data_theme = "c", placeholder = "Website URL" })
                        @Html.ValidationMessageFor(m => m.instructorObj.Website)
                    </div>

                    <br />
                    <a href="#" data-role="button" data-icon="delete" data-theme="a" data-rel="back">Cancel</a>
                    <p>
                        <input type="submit" value="Save Website" name="submitButton" data-theme="b" data-icon="check" />
                    </p>
                </fieldset>
            </div>
        }
    </div>
</div>

<!-- Footer More Menu Popup -->
<div data-role="page" id="popupFooterMoreMenu" data-overlay-theme="a" data-theme="c">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>More</h1>
	</div>

    <div data-role="content" data-theme="b">
		<ul data-role="listview" data-inset="true" data-theme="c">
            <li><a href="#popupClassLink" data-rel="dialog" data-transition="none">Class Link</a></li>
            <li><a href="#popupViewSubscribers" data-rel="dialog" data-transition="none">Subscribers</a></li>
		</ul>
    </div>
</div> 

<!-- Popup class link dialog -->
<div data-role="page" id="popupClassLink" data-overlay-theme="a" data-theme="c">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>Class Link</h1>
	</div>

    <div data-role="content" data-theme="b">
        <br />
        <div class="largeText"><a href="@Model.fullUrl" target="_blank">@Model.fullUrl</a></div>
        <!--todo:
        <a href="#" data-role="button" data-icon="plus" data-theme="a" data-rel="back">Copy</a>
        -->
        <br />
        <a href="#" data-role="button" data-icon="check" data-theme="b" data-rel="back">OK</a>
    </div>
</div>

<!-- Popup view subscribers dialog -->
<div data-role="page" id="popupViewSubscribers" data-overlay-theme="a" data-theme="c">
	<div data-role="header" data-theme="a" class="ui-corner-top">
		<h1>@Model.subscribers.Count() Subscriber(s)</h1>
	</div>

    <div data-role="content" data-theme="b">
        <br />
		<ul data-role="listview" data-inset="true" data-theme="c">
            @foreach (var subscriber in Model.subscribers)
            {
		        <li>
                <h2><center><a href="mailto:@subscriber.Email">@subscriber.Email</a></center></h2>
                </li>
            }
		</ul>
        <br />
        <a href="#" data-role="button" data-icon="check" data-theme="b" data-rel="back">OK</a>
    </div>
</div>

<!-- Announcement Pages Below -->
@for (int i = 0; i < Model.announcements.Count; i++)
{
    tempId1 = "announcement" + i;
    tempId2 = "#DeleteAnnWarning" + i;
    tempId3 = "DeleteAnnWarning" + i;
    <div data-role="page" id="@tempId1" class="bodyBg">
	    <div data-role="header">
            <div data-role="navbar" class="headerBar">
                <center>
                <h2>
                @Model.classObj.Name
                </h2>
                </center>
            </div>

		    <div data-role="navbar" class="ui-state-persist" data-iconpos="bottom">
		        <ul>
                <li><a href="#announcements" data-icon="arrow-l" data-rel="back">Back</a></li>
			    <li><a href="#assignments" data-icon="star" data-transition="none">@Model.AssignmentsLbl</a></li>
			    <li><a href="#instructor" data-icon="home" data-transition="none">@Model.InstructorLbl</a></li>
		        </ul>
		    </div><!-- /navbar -->
	    </div><!-- /header -->
		
	    <div data-role="content">
		    <ul data-role="listview" data-inset="true" data-theme="c">
		        <li>
			        <h2><span class="showAllText">
                    @Html.Raw(ClassDart.Controllers.Utilities.Linkify(Model.announcements[i].Text))
                    </span></h2>
			        <p><strong>@Model.announcements[i].UpdateDateTime.ToString("h:mm tt, dddd, MMMM dd, yyyy")</strong></p>
		        </li>
		    </ul>
            <br />
            <center>
            <a href="@tempId2" data-rel="dialog" data-role="button" data-inline="true" data-icon="delete" data-theme="f" data-transition="none">Delete Announcement</a>
            </center>
            <br />
	    </div><!-- /content -->

        @Html.Partial("_EditorFooter")

    </div><!-- /page -->
        
    <!-- Delete Announcement warnings -->
   	<div data-role="page" id="@tempId3" data-overlay-theme="a" data-theme="c">
		<div data-role="header" data-theme="a" class="ui-corner-top">
			<h1>Delete</h1>
		</div>
		<div data-role="content" data-theme="b" class="ui-corner-bottom ui-content">
			<h3 class="ui-title">Are you sure you want to delete this announcement?</h3>
			<p>This action cannot be undone.</p>
            <a href="#" data-role="button" data-icon="delete" data-theme="a" data-rel="back">Cancel</a>
            <a data-role="button" data-icon="check" data-theme="b"  href="@Url.Action("DeleteAnnouncementConfirmed", "Editor", new { id = Model.classObj.ID, index = i }, null)">Delete</a>
		</div>
	</div>   
}
